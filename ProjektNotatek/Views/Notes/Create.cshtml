@model CreateNoteModel
@{
    ViewData["Title"] = "Create note";
    var options = new List<string>() { "Normal", "Public", "Encrypted" };
}
<style>
#password {
    display: none;
}

#text-input {
    min-height: 50vh;
}

.sticky_card {
      position: relative;
    }

    .sticky_card .card-body {
      position: sticky;
      top: 0;
      z-index: 1;
      background-color: white;
    }

</style>
<form asp-controller="Notes" asp-action="Create" metod="post">
    @Html.ValidationSummary()
    <div class="form-group">
        <label asp-for="Title">Title:</label>
        <input type-="text" asp-for="Title" class="form-control" />
    </div>
   
    @Html.HiddenFor(m => m.NoteContent)
    <div class="card mt-3 sticky_card">
        <div class="card-body border-bottom border-1">
            @Html.Partial("_Toolbar")
        </div>
        <div id="text-input" class="form-control mt-2 overflow-auto" contenteditable="true">
        </div>
    </div>
    <div class="form-group col-4 mt-3">
        @Html.DropDownListFor(x => x.Option, options.Select(s => new SelectListItem { Text = s, Value = s }), new { @class = "form-select " })
    </div>
    
    <div id="password">
    <div class="form-group">
        <label asp-for="Password">Password:</label>
        <input type="password" asp-for="Password" class="form-control" />
    </div>
    <div class="form-group">
        <label asp-for="ConfirmPassword">Confirm password:</label>
        <input type="password" asp-for="ConfirmPassword" class="form-control" />
    </div>
    </div>
    
    <br/>
    <button type="submit" class="btn btn-primary w-100 mt-2" onclick="updateNoteContent();">Save</button>
    <a type="button" class="btn btn-primary w-100 mt-2" asp-area="" asp-controller="Notes" asp-action="Index">Back</a>
</form>

@Html.Partial("_Modals")


<script>   
let optionsButtons = document.querySelectorAll(".option-button");
let wrightArea = document.getElementById("text-input");
let advancedOptionButton = document.querySelectorAll(".adv-option-button");

const initializer = () => {
    document.getElementById("Option").value = "Normal";
    document.getElementById('text-input').innerHTML = document.getElementById('NoteContent').value;
    document.getElementById('Option').onchange = function(){
        if( document.getElementById("Option").value == "Encrypted"){
            document.getElementById("password").style.display = "block";
        }
         else{
             document.getElementById("password").style.display = "none";
         }
    };
}

const modifyText = (command, defaultUi, value) => {
    document.execCommand(command, defaultUi, value);
}

optionsButtons.forEach((button) => {
    button.addEventListener("click", () => {
        modifyText(button.id, false, null);
    })
});

advancedOptionButton.forEach((button) => {
    button.addEventListener("change", () => {
        modifyText(button.id, false, button.value);
    });
});

window.onload = initializer();
</script>
